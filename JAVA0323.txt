JAVA

소스작성

소스 파일당 하나의 클래스를 선언하는 것이 관례
	- 두 개 이상의 클래스고 선언 가능
	- 소스 파일 이름과 동일한 클래스만 
	
	- 클래스()는 생성자를 호출하는 코드
	- 
힙 영역의 객체를 사용하기 위해 사용
클래스 변수;
변수 = new 클래스();

클래스 변수 = new 클래스;

클래스로 부터 객체를 생성하려면 생성 연산자인 new 가 필요하다.

클래스 변수 = new 클래스();


public class Student{
	필드 
	student(){
	}
	메소드
	
}

클래스의 구성 멤버

필드(Field) - 객체의 데이터가 저장하는 역할 int fieldName;
생성자(Constructor) - 객체 생성시 초기화 역할 담당 ClassName()(....)
메소드(Method) - 객체의 동작에 해당하는 실행 블록 void methodName()(......)



필드의 내용
 - 객체의 고유 데이터
 - 객체가 가져야 할 부품 객체
 - 객체의 현재 상태 데이터

필드 선언
타입 필드 [= 초기값];

필드의 초기값
정수타입 = 0
	char - \u0000(빈 공백)
실수 타입 = 0.0, 0.0F
boolean = false;

String = null;

필드의 값 설정
메소드 호출해 객체를 사용할 수 있도록 준비

기본 생성자 (Defalut Constructor)
 - 모든 클래스는 생성

생성자 선언
 - 디폴트 생성자 대안 개발자가 직접 선언

외부 값이 어떤 타입으로 몇 개가 제공될 지 모름 - 생성자도 다양화

생성자 오버로딩(Overloading)
매개변수의 타입, 개수, 순서가 다은 생성자 여러 개 선언

실행 클래스를 만든 후
첫번째 생성자로 생성한 후 회사명과 모델명을 출력

두번째 생성자로 생성한 후 회사명과 모델명을 색깔 출력

세번째 생성자로 생성한 후 회사명과 모델명과 색깔과 최대속도 출력

1. 참조 타입에 대한 설명으로 틀린 것은 무엇입니까? ④
① 참조 타입에는 배열, 열거, 클래스, 인터페이스가 있다.
② 참조 타입 변수의 메모리 생성 위치는 스택이다.
③ 참조 타입에서 ==, != 연산자느 객체 번지를 비교한다.
④ 참조 타입은 null 값으로 초기화할 수 없다.

2. 자바에서 메모리 사용에 대한 설명으로 틀린 것은 무엇입니까? ③
① 로컬 변수는 스택 영역에 생성되며 실행 블록이 끝나면 소멸된다.
② 메소드 코드나, 상수, 열거 상수는 정적(메소드) 영역에 생성된다.
③ 참조되지 않는 객체는 프로그램에서 직접 소멸코드를 작성하는 것이 좋다.
④ 배열 및 객체는 힙 영역에 생성된다.

3. String 타입에 대한 설명으로 틀린 것은 무엇입니까?②
① String은 클래스이므로 참조 타입이다.
② String 타입의 문자열 비교는 == 를 사용해야한다.
③ 동일한 문자열 리터럴을 저장하는 변수는 동일한 String 객체를 참조한다.
④ new String("문자열")은 문자열이 동일하더라도 다른 String 객체를 생서한다.

4. 배열을 생성하는 방법으로 틀린 것은 무엇입니까? ②
① int[] array = {1, 2, 3};
② int[] array; array = {1, 2, 3};
③ int[] array = new int[3];
④ int[][] array = new int[3][2];

5. 배열의 기본 초기값에 대한 설명으로 틀린 것은 무엇입니까? ③
① 정수 타입 배열 항목의 기본 초기값은 0이다.
② 실수 타입 배열 항목의 기본 초기값은 0.0f 또는 0.0이다.
③ boolean 타입 배열 항목의 기본 초기값은 true이다.
④ 참조 타입 배열 항목의 기본 초기값은 null이다.

6. 배열의 길이에 대한 문제입니다. array.length 의 값과 array[2].length의 값은 얼마입니까?

array.length -> 3, array[2].length -> 5

int [][] array = {
{95, 86},
{83, 92, 96},
{78, 83, 93, 87, 88}
};

7. 주어진 배열의 항목에서 최대값을 구해보세요 (for문을 이용하세요).
public class Exercise07 {
	public static void main(String[] args) {
		int max = 0;
		int[] array = {1, 5, 3, 8, 2};
		for(int i = 0; i < array.length; i++) {
			if(max < array[i]) {
				max = array[i];
			}
		}
		System.out.println(max);
	}
}

8. 주어진 배열의 전체 항목의 합과 평균값을 구해보세요(중첩 for문을 이용하세요).
public class Exercise08 {
	public static void main(String[] args) {
		int[][] array = {
				{95, 86},
				{83, 92, 96},
				{78, 83, 93, 87, 88}
		};
		int sum = 0;
		int length = 0;
		double avg = 0.0;
		for(int i = 0; i < array.length; i++) {
			for(int j = 0; j < array[i].length; j++) {
				sum += array[i][j];
				length += 1;
			}
		}
		avg = (double)sum/length;
		System.out.println("sum : " + sum);
		System.out.println("avg : " + avg);
	}
}

9. 다음은 키보드로부터 학생 수와 각 학생들의 점수를 입력받아서, 최고 점수 및 평균 점수를 
 구하는 프로그램 입니다. 실행 결과를 보고, 알맞게 작성해보세요(참고로 16라인에서 Scanner의
 nextInt() 메소드는 콘솔에 입력된 숫자를 읽고 리턴합니다).





















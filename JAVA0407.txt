JAVA

1. 자바의 상속에 대한 설명 중 틀린 것은 무엇입니까? ①
① 자바는 다중 상속을 허용한다.
② 부모의 메소드를 자식클래스에서 재정의(오버라이딩) 할 수 있다.
③ 부모의 private 접근 제한을 갖는 필드와 메소드는 상속의 대상이 아니다 
④ final클래스는 상속할 수 없고, final 메소드는 오버라이딩 할 수 없다.

2. 클래스 타입 변환에 대한 설명 중 틀린 것은 무엇입니까? ②
① 자식 객체는 부모타입으로 자동 타입 변환된다.
② 부모 객체는 항상 자식 타입으로 강제 타입 변환된다.
③ 자동 타입 변환을 이용해서 필드와 매개변수의 다형성을 구현한다.
④ 강제 타입 변환 전에 instanceof 연산자로 변환 가능한지 검사하는 것이 좋다.

3. final 키워드에 대한 설명으로 틀린 것은? ①
① final 클래스는 부모 클래스로 사용할 수 있다.
② final 필드는 값이 저장된 후에는 변경할 수 없다.
③ final 메소드는 재정의(오버라이딩) 할 수 없다.
④ static final 필드는 상수를 말한다.

4. 오버라이딩 (Overriding)에 대한 설명으로 틀린 것은? ④
① 부모 메소드의 시그니처(리턴 타입, 메소드명, 매개 변수)와 동일해야 한다.
② 부모 메소드보다 좁은 접근 제한자를 붙일 수 없다(예 public (부모) -> private (자식)
③ @Override 어노테이션을 사용하면 재정의가 확실한지 컴파일러가 검증한다.
④ protected 접근 제한을 갖는 메소드는 다른 패키지의 자식 클래스에서 재정의할 수 없다.

5. parent 클래스를 상속해서 Child 클래스를 다음과 같이 작성했는데, child 클래스의 생성자에서
   컴파일 에러가 발생했습니다. 그 이유를 설명해보세요.

 자식클래스에 Override 된 메소드에서 부모클래스에서 기본 생성자를 호출 할 때는
 super()를 사용해서 생성자를 호출해야한다.

public class Parent{
	public String name;

	public Parent(String name){
		this.name = name;
	}
}

public class Child extends Parent{
	private int studentNo;

	public Child(String name, int studentNo){
		this.name = name;
		this.studentNo = studentNo;
	}
}

6. Parent 클래스를 상속받아 Child 클래스를 다름과 같이 작성했습니다. ChildExample 클래스를
   실행했을 때 호출되는 각 클래스의 생성자의 순서를 생각하면서 출력 결과를 작성해보세요.

Parent(String nation) call -> Parent() call -> Child(String name) call -> Child() call

결과
Parent(String nation) call
Parent() call
Child(String name) call
Child() call

public class Parent{
	public String nation;

	public Parent(){
		this("대한민국");
		System.out.println("Parent() call");
	}
	public Parent(String nation){
		this.nation = nation;
		System.out.println("Parent(String nation) call");
	}
}

public class Child extends Parent{
	private String name;

	public Child(){
		this("홍길동");
		System.out.println("Child() call");
	}

	public Child(String name){
		this.name = name;
		System.out.println("Child(String name) call");
	}
}

public class ChildExample{
	public static void main(String[] args){
		Child child = new Child();
	}
}

7. Tire 클래스를 상속받아 SnowTire 클래스를 다음과 같이 작성했습니다. SnowTireExample
   클래스를 실행했을 때 출력 결과는 무엇일까요?

스노우 타이어가 굴러갑니다.
스노우 타이어가 굴러갑니다.

public class Tire{
	public void run(){
		System.out.println("일반 타이어가 굴러갑니다.");
	}
}

public class SnowTire extends Tire{
	@Override
	public void run(){
		System.out.println("스노우 타이어가 굴러갑니다.");
	}
}

public class SnowTireExample{
	public static void main(Stringp[] args){
		SnowTire snowTire = new SnowTire();
		Tire tire = snowTire;

		snowTire.run();
		tire.run();
	}
}


8. A, B, C, D, E, F 클래스가 다음과 같이 상속 관계에 있을 때 
   다음 빈칸에 들어올수 없는 코드는? ②

A - B - D
 |   └ E
└ C - F

B b = (                      );

메소드 선언 : void method(B b){ … }
메소드 호출 : method(                         )


① new B()
② (B) new A() //강제 타입 변환
③ new D() // 자동 타입 변환
④ new E() // 자동타입 변환

----------------------------------------------------------------------------------------------------------

데이터 - 키보드, 파일, 프로그램으로 --> 입력
          - 모니터, 프린터, 파일저장, 다른 프로그램 --> 출력

stream --> 단방향으로 데이터가 흐른다.
byte[] data = new byte[100];


JAVA 입출력 관련한 패키지 java.io

구분		바이트스트림			문자스트림
		입력		출력		입력		출력
최상위 클래스	InputStream	OutputStream	Reader		Writer

하위 클래스	이름 :		이름 :		이름 :		이름 :
		InputStream	OutputStream	Reader		Writer
		예) 		예)		예)		예)
		FileInputStream	FileOutputStream	FileReader	FileWriter

void write(int c) - 매개값으로 주어진 한 문자를 출력
void write(char[] cbuf) - 매개값으로 주어진 배열의 모든 문자를 출력
void write(char[] cbuf, int off, int len) - 매개값으로 배열에서 cbuf(off)부터 len 까지의 문자 출력

void write(String str) - 매개값으로 주어진 문자열 출력
void write(String str, int off, int len) - 매개값 문자열에서 off까지의 문자 출력
void flush() - 버퍼에 잔류하는 모든 문자를 출력
void close() - 출력 스트림을 닫고 사용 메모리를 해제




























JAVA

HTTP 작동 방식

 * HTTP - Hyper Text Transfer Protocol
 * 웹 서버와 웹 클라이언트(웹 브라우저) 간에 통신하기 위한 프로토콜
 
 * 100대 : 정보요청을 받아 처리중

 * 200대 : 성공, 클라이언트의 요청이 성공적으로 처리

 * 300대 : 경로변경, 요청을 처리하기위해 추가적인 액션 수행

 * 400대 : 클라이언트의 요청이 오류 (파일을 찾지 못하는 등....)

 * 500대 : 서버에러 (클라이언트의 요청을 처리 할 수 없음)


3. HTTP GET메소드

 * 서버의 URL에 의해 참조되는 정보를 요청
 * 웹 서버에 데이터를 요청
   - 데이터의 길이 제한
   - 전송 여부를 확인 할 수 없다
   - 특수 문자.... 처리

	http://주소?name=값&pass=값;

	http 헤드메소드 -> 해당페이지가 존재하는지 오류는 없는지 확인.


4. HTTP POST메소드

 * 클라이언트의 데이터를 웹 서버에 전달
 * 파일 전송
 * 길이에 제한 없으며, 전달 여부 확인 가능
 * 같은 서버 안에서만 가능


init -> 최초에 한 번 실행 (서블릿이 메모리에 load 될 때)

doGet, doPost service -> 클라이언트의 요청이 있을 때 마다 실행

destroy -> 마지막에 한 번 실행 (서블릿이 메모리에서 제거될 때)

HttpServletRequest -> getParameter();		String email = request.getParamether("email");
			-배열 타입
		-> getParameterValues();
		-> getParameterNames(); //파라미터의 이름을 확인함



void destroy()	서블릿이 메모리에서 unload 되기 전에 
		서블릿 자원을 반환하기 위해 호출

String getInitParameter(String name)	이름에 해당되는 서블릿의 초기화 파라미터값을 리턴


Enumeration 		서블릿 초기화 파라미터 이름들을 리턴
getInitParameterNames();


void init()		메모리에 로드되기 전에 초기화를 위해 수행된다

void init(ServletConfig config)	ServletConfig 인터페이스를 이용해 
				서블릿을 초기화 한다.

void service(HttpServletRequest req,	service()메소드에 의해 호출되며, 클라이언트의 요청
	HttpServletResponse res)	종류에 따라 클래스에 정의 되어 있는 적당한 do***()
				메소드를 호출

void doPost()

void doGet()


HttpServletRequest 인터페이스
 * Cookie[] getCookies() - 브라우저가 요청과 함께 전달한 쿠키를 얻어온다.

 * getMethod() - HTTP 명령어 이름 (GET, POST, PUT)을 얻어온다.

 * HttpSession getSession() - 현재 세션을 리턴

 * HttpSession getSession(Boolean create) - 현재 세션을 리턴하거나 없으면 생성






























